{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CommentsFormComponent from './CommentsFormComponent.vue';\nexport default {\n  name: 'CommentsComponent',\n  components: {\n    CommentsFormComponent\n  },\n  data() {\n    return {\n      comments: []\n    };\n  },\n  methods: {\n    addComment(comment) {\n      this.comments.push(comment);\n    },\n    removeComment(index) {\n      this.comments.splice(index, 1);\n    }\n  },\n  computed: {\n    allComments() {\n      return this.comments.map(comment => ({\n        ...comment,\n        name: comment.name.trim() === '' ? 'Anônimo' : comment.name\n      }));\n    }\n  },\n  watch: {\n    comments(val) {\n      console.log('val', val);\n    }\n  }\n};","map":{"version":3,"names":["CommentsFormComponent","name","components","data","comments","methods","addComment","comment","push","removeComment","index","splice","computed","allComments","map","trim","watch","val","console","log"],"sources":["/home/vinicius/Projetos/vue-comments/src/components/CommentsComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Comentários</h1>\n    <hr />\n    <CommentsFormComponent v-on:add-comment=\"addComment\"/>\n    <hr />\n    <div class=\"list-group\">\n      <p v-if=\"comments.length <= 0\">Sem comentários...</p>\n      <div v-else class=\"list-group-item\" v-for=\"(comment, index) in allComments\" :v-bind:key=\"index\">\n        <span class=\"comment__author\">Autor: <strong>{{ comment.name }}</strong></span>\n        <p>{{ comment.message }}</p>\n        <div>\n          <a href=\"#\" title=\"Excluir\" v-on:click.prevent=\"removeComment(index)\">Excluir</a>\n        </div>\n      </div>\n    </div>\n    <hr />\n  </div>\n</template>\n\n<script>\nimport CommentsFormComponent from './CommentsFormComponent.vue'\n\nexport default {\n  name: 'CommentsComponent',\n  components: {\n    CommentsFormComponent\n  },\n  data() {\n    return {\n      comments: []\n    }\n  },\n  methods: {\n    addComment(comment) {\n      this.comments.push(comment);\n    },\n    removeComment(index) {\n      this.comments.splice(index, 1);\n    }\n  },\n  computed: {\n    allComments() {\n      return this.comments.map(comment => ({\n        ...comment,\n        name: comment.name.trim() === '' ? 'Anônimo' : comment.name\n      }))\n    }\n  },\n  watch: {\n    comments(val) {\n      console.log( 'val', val);\n    }\n  }\n}\n</script>"],"mappings":";AAqBA,OAAOA,qBAAoB,MAAO,6BAA4B;AAE9D,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACDE,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACN,QAAQ,CAACO,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAChC;EACF,CAAC;EACDE,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACT,QAAQ,CAACU,GAAG,CAACP,OAAM,KAAM;QACnC,GAAGA,OAAO;QACVN,IAAI,EAAEM,OAAO,CAACN,IAAI,CAACc,IAAI,EAAC,KAAM,EAAC,GAAI,SAAQ,GAAIR,OAAO,CAACN;MACzD,CAAC,CAAC;IACJ;EACF,CAAC;EACDe,KAAK,EAAE;IACLZ,QAAQA,CAACa,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,KAAK,EAAEF,GAAG,CAAC;IAC1B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}